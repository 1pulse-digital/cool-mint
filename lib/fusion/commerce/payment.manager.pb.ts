// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: commerce/payment.manager.proto
/* eslint-disable */

import type { ByteSource, PartialDeep } from "protoscript";
import * as protoscript from "protoscript";
import { JSONrequest, PBrequest } from "twirpscript";
// This is the minimum version supported by the current runtime.
// If this line fails typechecking, breaking changes have been introduced and this
// file needs to be regenerated by running `npx twirpscript`.
export { MIN_SUPPORTED_VERSION_0_0_56 } from "twirpscript";
import type { ClientConfiguration } from "twirpscript";

//========================================//
//                 Types                  //
//========================================//

export interface GeneratePaymentIdentifierRequest {
  returnUrl: string;
  cancelUrl: string;
  notifyUrl: string;
  nameFirst: string;
  nameLast: string;
  emailAddress: string;
  cellNumber: string;
  mPaymentId: string;
  amount: number;
  itemName: string;
  itemDescription: string;
}

export interface GeneratePaymentIdentifierResponse {
  id: string;
}

//========================================//
//     PaymentManager Protobuf Client     //
//========================================//

/**
 * GeneratePaymentIdentifier will get payment identifier to use for checkout
 */
export async function GeneratePaymentIdentifier(
  generatePaymentIdentifierRequest: GeneratePaymentIdentifierRequest,
  config?: ClientConfiguration,
): Promise<GeneratePaymentIdentifierResponse> {
  const response = await PBrequest(
    "/commerce.PaymentManager/GeneratePaymentIdentifier",
    GeneratePaymentIdentifierRequest.encode(generatePaymentIdentifierRequest),
    config,
  );
  return GeneratePaymentIdentifierResponse.decode(response);
}

//========================================//
//       PaymentManager JSON Client       //
//========================================//

/**
 * GeneratePaymentIdentifier will get payment identifier to use for checkout
 */
export async function GeneratePaymentIdentifierJSON(
  generatePaymentIdentifierRequest: GeneratePaymentIdentifierRequest,
  config?: ClientConfiguration,
): Promise<GeneratePaymentIdentifierResponse> {
  const response = await JSONrequest(
    "/commerce.PaymentManager/GeneratePaymentIdentifier",
    GeneratePaymentIdentifierRequestJSON.encode(
      generatePaymentIdentifierRequest,
    ),
    config,
  );
  return GeneratePaymentIdentifierResponseJSON.decode(response);
}

//========================================//
//             PaymentManager             //
//========================================//

export interface PaymentManager<Context = unknown> {
  /**
   * GeneratePaymentIdentifier will get payment identifier to use for checkout
   */
  GeneratePaymentIdentifier: (
    generatePaymentIdentifierRequest: GeneratePaymentIdentifierRequest,
    context: Context,
  ) =>
    | Promise<GeneratePaymentIdentifierResponse>
    | GeneratePaymentIdentifierResponse;
}

export function createPaymentManager<Context>(
  service: PaymentManager<Context>,
) {
  return {
    name: "commerce.PaymentManager",
    methods: {
      GeneratePaymentIdentifier: {
        name: "GeneratePaymentIdentifier",
        handler: service.GeneratePaymentIdentifier,
        input: {
          protobuf: GeneratePaymentIdentifierRequest,
          json: GeneratePaymentIdentifierRequestJSON,
        },
        output: {
          protobuf: GeneratePaymentIdentifierResponse,
          json: GeneratePaymentIdentifierResponseJSON,
        },
      },
    },
  } as const;
}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const GeneratePaymentIdentifierRequest = {
  /**
   * Serializes GeneratePaymentIdentifierRequest to protobuf.
   */
  encode: function (
    msg: PartialDeep<GeneratePaymentIdentifierRequest>,
  ): Uint8Array {
    return GeneratePaymentIdentifierRequest._writeMessage(
      msg,
      new protoscript.BinaryWriter(),
    ).getResultBuffer();
  },

  /**
   * Deserializes GeneratePaymentIdentifierRequest from protobuf.
   */
  decode: function (bytes: ByteSource): GeneratePaymentIdentifierRequest {
    return GeneratePaymentIdentifierRequest._readMessage(
      GeneratePaymentIdentifierRequest.initialize(),
      new protoscript.BinaryReader(bytes),
    );
  },

  /**
   * Initializes GeneratePaymentIdentifierRequest with all fields set to their default value.
   */
  initialize: function (
    msg?: Partial<GeneratePaymentIdentifierRequest>,
  ): GeneratePaymentIdentifierRequest {
    return {
      returnUrl: "",
      cancelUrl: "",
      notifyUrl: "",
      nameFirst: "",
      nameLast: "",
      emailAddress: "",
      cellNumber: "",
      mPaymentId: "",
      amount: 0,
      itemName: "",
      itemDescription: "",
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<GeneratePaymentIdentifierRequest>,
    writer: protoscript.BinaryWriter,
  ): protoscript.BinaryWriter {
    if (msg.returnUrl) {
      writer.writeString(1, msg.returnUrl);
    }
    if (msg.cancelUrl) {
      writer.writeString(2, msg.cancelUrl);
    }
    if (msg.notifyUrl) {
      writer.writeString(3, msg.notifyUrl);
    }
    if (msg.nameFirst) {
      writer.writeString(4, msg.nameFirst);
    }
    if (msg.nameLast) {
      writer.writeString(5, msg.nameLast);
    }
    if (msg.emailAddress) {
      writer.writeString(6, msg.emailAddress);
    }
    if (msg.cellNumber) {
      writer.writeString(7, msg.cellNumber);
    }
    if (msg.mPaymentId) {
      writer.writeString(8, msg.mPaymentId);
    }
    if (msg.amount) {
      writer.writeFloat(9, msg.amount);
    }
    if (msg.itemName) {
      writer.writeString(10, msg.itemName);
    }
    if (msg.itemDescription) {
      writer.writeString(11, msg.itemDescription);
    }
    return writer;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: GeneratePaymentIdentifierRequest,
    reader: protoscript.BinaryReader,
  ): GeneratePaymentIdentifierRequest {
    while (reader.nextField()) {
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.returnUrl = reader.readString();
          break;
        }
        case 2: {
          msg.cancelUrl = reader.readString();
          break;
        }
        case 3: {
          msg.notifyUrl = reader.readString();
          break;
        }
        case 4: {
          msg.nameFirst = reader.readString();
          break;
        }
        case 5: {
          msg.nameLast = reader.readString();
          break;
        }
        case 6: {
          msg.emailAddress = reader.readString();
          break;
        }
        case 7: {
          msg.cellNumber = reader.readString();
          break;
        }
        case 8: {
          msg.mPaymentId = reader.readString();
          break;
        }
        case 9: {
          msg.amount = reader.readFloat();
          break;
        }
        case 10: {
          msg.itemName = reader.readString();
          break;
        }
        case 11: {
          msg.itemDescription = reader.readString();
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    return msg;
  },
};

export const GeneratePaymentIdentifierResponse = {
  /**
   * Serializes GeneratePaymentIdentifierResponse to protobuf.
   */
  encode: function (
    msg: PartialDeep<GeneratePaymentIdentifierResponse>,
  ): Uint8Array {
    return GeneratePaymentIdentifierResponse._writeMessage(
      msg,
      new protoscript.BinaryWriter(),
    ).getResultBuffer();
  },

  /**
   * Deserializes GeneratePaymentIdentifierResponse from protobuf.
   */
  decode: function (bytes: ByteSource): GeneratePaymentIdentifierResponse {
    return GeneratePaymentIdentifierResponse._readMessage(
      GeneratePaymentIdentifierResponse.initialize(),
      new protoscript.BinaryReader(bytes),
    );
  },

  /**
   * Initializes GeneratePaymentIdentifierResponse with all fields set to their default value.
   */
  initialize: function (
    msg?: Partial<GeneratePaymentIdentifierResponse>,
  ): GeneratePaymentIdentifierResponse {
    return {
      id: "",
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<GeneratePaymentIdentifierResponse>,
    writer: protoscript.BinaryWriter,
  ): protoscript.BinaryWriter {
    if (msg.id) {
      writer.writeString(1, msg.id);
    }
    return writer;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: GeneratePaymentIdentifierResponse,
    reader: protoscript.BinaryReader,
  ): GeneratePaymentIdentifierResponse {
    while (reader.nextField()) {
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.id = reader.readString();
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    return msg;
  },
};

//========================================//
//          JSON Encode / Decode          //
//========================================//

export const GeneratePaymentIdentifierRequestJSON = {
  /**
   * Serializes GeneratePaymentIdentifierRequest to JSON.
   */
  encode: function (
    msg: PartialDeep<GeneratePaymentIdentifierRequest>,
  ): string {
    return JSON.stringify(
      GeneratePaymentIdentifierRequestJSON._writeMessage(msg),
    );
  },

  /**
   * Deserializes GeneratePaymentIdentifierRequest from JSON.
   */
  decode: function (json: string): GeneratePaymentIdentifierRequest {
    return GeneratePaymentIdentifierRequestJSON._readMessage(
      GeneratePaymentIdentifierRequestJSON.initialize(),
      JSON.parse(json),
    );
  },

  /**
   * Initializes GeneratePaymentIdentifierRequest with all fields set to their default value.
   */
  initialize: function (
    msg?: Partial<GeneratePaymentIdentifierRequest>,
  ): GeneratePaymentIdentifierRequest {
    return {
      returnUrl: "",
      cancelUrl: "",
      notifyUrl: "",
      nameFirst: "",
      nameLast: "",
      emailAddress: "",
      cellNumber: "",
      mPaymentId: "",
      amount: 0,
      itemName: "",
      itemDescription: "",
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<GeneratePaymentIdentifierRequest>,
  ): Record<string, unknown> {
    const json: Record<string, unknown> = {};
    if (msg.returnUrl) {
      json["returnUrl"] = msg.returnUrl;
    }
    if (msg.cancelUrl) {
      json["cancelUrl"] = msg.cancelUrl;
    }
    if (msg.notifyUrl) {
      json["notifyUrl"] = msg.notifyUrl;
    }
    if (msg.nameFirst) {
      json["nameFirst"] = msg.nameFirst;
    }
    if (msg.nameLast) {
      json["nameLast"] = msg.nameLast;
    }
    if (msg.emailAddress) {
      json["emailAddress"] = msg.emailAddress;
    }
    if (msg.cellNumber) {
      json["cellNumber"] = msg.cellNumber;
    }
    if (msg.mPaymentId) {
      json["mPaymentId"] = msg.mPaymentId;
    }
    if (msg.amount) {
      json["amount"] = msg.amount;
    }
    if (msg.itemName) {
      json["itemName"] = msg.itemName;
    }
    if (msg.itemDescription) {
      json["itemDescription"] = msg.itemDescription;
    }
    return json;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: GeneratePaymentIdentifierRequest,
    json: any,
  ): GeneratePaymentIdentifierRequest {
    const _returnUrl_ = json["returnUrl"] ?? json["return_url"];
    if (_returnUrl_) {
      msg.returnUrl = _returnUrl_;
    }
    const _cancelUrl_ = json["cancelUrl"] ?? json["cancel_url"];
    if (_cancelUrl_) {
      msg.cancelUrl = _cancelUrl_;
    }
    const _notifyUrl_ = json["notifyUrl"] ?? json["notify_url"];
    if (_notifyUrl_) {
      msg.notifyUrl = _notifyUrl_;
    }
    const _nameFirst_ = json["nameFirst"] ?? json["name_first"];
    if (_nameFirst_) {
      msg.nameFirst = _nameFirst_;
    }
    const _nameLast_ = json["nameLast"] ?? json["name_last"];
    if (_nameLast_) {
      msg.nameLast = _nameLast_;
    }
    const _emailAddress_ = json["emailAddress"] ?? json["email_address"];
    if (_emailAddress_) {
      msg.emailAddress = _emailAddress_;
    }
    const _cellNumber_ = json["cellNumber"] ?? json["cell_number"];
    if (_cellNumber_) {
      msg.cellNumber = _cellNumber_;
    }
    const _mPaymentId_ = json["mPaymentId"] ?? json["m_payment_id"];
    if (_mPaymentId_) {
      msg.mPaymentId = _mPaymentId_;
    }
    const _amount_ = json["amount"];
    if (_amount_) {
      msg.amount = protoscript.parseDouble(_amount_);
    }
    const _itemName_ = json["itemName"] ?? json["item_name"];
    if (_itemName_) {
      msg.itemName = _itemName_;
    }
    const _itemDescription_ =
      json["itemDescription"] ?? json["item_description"];
    if (_itemDescription_) {
      msg.itemDescription = _itemDescription_;
    }
    return msg;
  },
};

export const GeneratePaymentIdentifierResponseJSON = {
  /**
   * Serializes GeneratePaymentIdentifierResponse to JSON.
   */
  encode: function (
    msg: PartialDeep<GeneratePaymentIdentifierResponse>,
  ): string {
    return JSON.stringify(
      GeneratePaymentIdentifierResponseJSON._writeMessage(msg),
    );
  },

  /**
   * Deserializes GeneratePaymentIdentifierResponse from JSON.
   */
  decode: function (json: string): GeneratePaymentIdentifierResponse {
    return GeneratePaymentIdentifierResponseJSON._readMessage(
      GeneratePaymentIdentifierResponseJSON.initialize(),
      JSON.parse(json),
    );
  },

  /**
   * Initializes GeneratePaymentIdentifierResponse with all fields set to their default value.
   */
  initialize: function (
    msg?: Partial<GeneratePaymentIdentifierResponse>,
  ): GeneratePaymentIdentifierResponse {
    return {
      id: "",
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<GeneratePaymentIdentifierResponse>,
  ): Record<string, unknown> {
    const json: Record<string, unknown> = {};
    if (msg.id) {
      json["id"] = msg.id;
    }
    return json;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: GeneratePaymentIdentifierResponse,
    json: any,
  ): GeneratePaymentIdentifierResponse {
    const _id_ = json["id"];
    if (_id_) {
      msg.id = _id_;
    }
    return msg;
  },
};
