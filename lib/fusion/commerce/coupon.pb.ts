// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: commerce/coupon.proto
/* eslint-disable */

import type { ByteSource, PartialDeep } from "protoscript";
import * as protoscript from "protoscript";

import * as auditEntry from "../audit/entry.pb";

//========================================//
//                 Types                  //
//========================================//

export interface Coupon {
  name: string;
  uid: string;
  auditEntry: auditEntry.Entry;
}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const Coupon = {
  /**
   * Serializes Coupon to protobuf.
   */
  encode: function (msg: PartialDeep<Coupon>): Uint8Array {
    return Coupon._writeMessage(
      msg,
      new protoscript.BinaryWriter(),
    ).getResultBuffer();
  },

  /**
   * Deserializes Coupon from protobuf.
   */
  decode: function (bytes: ByteSource): Coupon {
    return Coupon._readMessage(
      Coupon.initialize(),
      new protoscript.BinaryReader(bytes),
    );
  },

  /**
   * Initializes Coupon with all fields set to their default value.
   */
  initialize: function (msg?: Partial<Coupon>): Coupon {
    return {
      name: "",
      uid: "",
      auditEntry: auditEntry.Entry.initialize(),
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<Coupon>,
    writer: protoscript.BinaryWriter,
  ): protoscript.BinaryWriter {
    if (msg.name) {
      writer.writeString(1, msg.name);
    }
    if (msg.uid) {
      writer.writeString(2, msg.uid);
    }
    if (msg.auditEntry) {
      writer.writeMessage(3, msg.auditEntry, auditEntry.Entry._writeMessage);
    }
    return writer;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: Coupon,
    reader: protoscript.BinaryReader,
  ): Coupon {
    while (reader.nextField()) {
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.name = reader.readString();
          break;
        }
        case 2: {
          msg.uid = reader.readString();
          break;
        }
        case 3: {
          reader.readMessage(msg.auditEntry, auditEntry.Entry._readMessage);
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    return msg;
  },
};

//========================================//
//          JSON Encode / Decode          //
//========================================//

export const CouponJSON = {
  /**
   * Serializes Coupon to JSON.
   */
  encode: function (msg: PartialDeep<Coupon>): string {
    return JSON.stringify(CouponJSON._writeMessage(msg));
  },

  /**
   * Deserializes Coupon from JSON.
   */
  decode: function (json: string): Coupon {
    return CouponJSON._readMessage(CouponJSON.initialize(), JSON.parse(json));
  },

  /**
   * Initializes Coupon with all fields set to their default value.
   */
  initialize: function (msg?: Partial<Coupon>): Coupon {
    return {
      name: "",
      uid: "",
      auditEntry: auditEntry.EntryJSON.initialize(),
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (msg: PartialDeep<Coupon>): Record<string, unknown> {
    const json: Record<string, unknown> = {};
    if (msg.name) {
      json["name"] = msg.name;
    }
    if (msg.uid) {
      json["uid"] = msg.uid;
    }
    if (msg.auditEntry) {
      const _auditEntry_ = auditEntry.EntryJSON._writeMessage(msg.auditEntry);
      if (Object.keys(_auditEntry_).length > 0) {
        json["auditEntry"] = _auditEntry_;
      }
    }
    return json;
  },

  /**
   * @private
   */
  _readMessage: function (msg: Coupon, json: any): Coupon {
    const _name_ = json["name"];
    if (_name_) {
      msg.name = _name_;
    }
    const _uid_ = json["uid"];
    if (_uid_) {
      msg.uid = _uid_;
    }
    const _auditEntry_ = json["auditEntry"];
    if (_auditEntry_) {
      auditEntry.EntryJSON._readMessage(msg.auditEntry, _auditEntry_);
    }
    return msg;
  },
};
