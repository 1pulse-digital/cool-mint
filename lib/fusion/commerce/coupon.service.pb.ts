// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: commerce/coupon.service.proto
/* eslint-disable */

import type { ByteSource, PartialDeep } from "protoscript";
import * as protoscript from "protoscript";
import { JSONrequest, PBrequest } from "twirpscript";
// This is the minimum version supported by the current runtime.
// If this line fails typechecking, breaking changes have been introduced and this
// file needs to be regenerated by running `npx twirpscript`.
export { MIN_SUPPORTED_VERSION_0_0_56 } from "twirpscript";
import type { ClientConfiguration } from "twirpscript";
import * as commerceCart from "./cart.pb";

//========================================//
//                 Types                  //
//========================================//

export interface ApplyCouponRequest {
  /**
   * The coupon code to apply
   */
  code: string;
}

//========================================//
//     CouponService Protobuf Client      //
//========================================//

export async function ApplyCoupon(
  applyCouponRequest: ApplyCouponRequest,
  config?: ClientConfiguration,
): Promise<commerceCart.Cart> {
  const response = await PBrequest(
    "/commerce.CouponService/ApplyCoupon",
    ApplyCouponRequest.encode(applyCouponRequest),
    config,
  );
  return commerceCart.Cart.decode(response);
}

//========================================//
//       CouponService JSON Client        //
//========================================//

export async function ApplyCouponJSON(
  applyCouponRequest: ApplyCouponRequest,
  config?: ClientConfiguration,
): Promise<commerceCart.Cart> {
  const response = await JSONrequest(
    "/commerce.CouponService/ApplyCoupon",
    ApplyCouponRequestJSON.encode(applyCouponRequest),
    config,
  );
  return commerceCart.CartJSON.decode(response);
}

//========================================//
//             CouponService              //
//========================================//

export interface CouponService<Context = unknown> {
  ApplyCoupon: (
    applyCouponRequest: ApplyCouponRequest,
    context: Context,
  ) => Promise<commerceCart.Cart> | commerceCart.Cart;
}

export function createCouponService<Context>(service: CouponService<Context>) {
  return {
    name: "commerce.CouponService",
    methods: {
      ApplyCoupon: {
        name: "ApplyCoupon",
        handler: service.ApplyCoupon,
        input: { protobuf: ApplyCouponRequest, json: ApplyCouponRequestJSON },
        output: { protobuf: commerceCart.Cart, json: commerceCart.CartJSON },
      },
    },
  } as const;
}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const ApplyCouponRequest = {
  /**
   * Serializes ApplyCouponRequest to protobuf.
   */
  encode: function (msg: PartialDeep<ApplyCouponRequest>): Uint8Array {
    return ApplyCouponRequest._writeMessage(
      msg,
      new protoscript.BinaryWriter(),
    ).getResultBuffer();
  },

  /**
   * Deserializes ApplyCouponRequest from protobuf.
   */
  decode: function (bytes: ByteSource): ApplyCouponRequest {
    return ApplyCouponRequest._readMessage(
      ApplyCouponRequest.initialize(),
      new protoscript.BinaryReader(bytes),
    );
  },

  /**
   * Initializes ApplyCouponRequest with all fields set to their default value.
   */
  initialize: function (msg?: Partial<ApplyCouponRequest>): ApplyCouponRequest {
    return {
      code: "",
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<ApplyCouponRequest>,
    writer: protoscript.BinaryWriter,
  ): protoscript.BinaryWriter {
    if (msg.code) {
      writer.writeString(1, msg.code);
    }
    return writer;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: ApplyCouponRequest,
    reader: protoscript.BinaryReader,
  ): ApplyCouponRequest {
    while (reader.nextField()) {
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.code = reader.readString();
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    return msg;
  },
};

//========================================//
//          JSON Encode / Decode          //
//========================================//

export const ApplyCouponRequestJSON = {
  /**
   * Serializes ApplyCouponRequest to JSON.
   */
  encode: function (msg: PartialDeep<ApplyCouponRequest>): string {
    return JSON.stringify(ApplyCouponRequestJSON._writeMessage(msg));
  },

  /**
   * Deserializes ApplyCouponRequest from JSON.
   */
  decode: function (json: string): ApplyCouponRequest {
    return ApplyCouponRequestJSON._readMessage(
      ApplyCouponRequestJSON.initialize(),
      JSON.parse(json),
    );
  },

  /**
   * Initializes ApplyCouponRequest with all fields set to their default value.
   */
  initialize: function (msg?: Partial<ApplyCouponRequest>): ApplyCouponRequest {
    return {
      code: "",
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<ApplyCouponRequest>,
  ): Record<string, unknown> {
    const json: Record<string, unknown> = {};
    if (msg.code) {
      json["code"] = msg.code;
    }
    return json;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: ApplyCouponRequest,
    json: any,
  ): ApplyCouponRequest {
    const _code_ = json["code"];
    if (_code_) {
      msg.code = _code_;
    }
    return msg;
  },
};
