// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: auth/role.proto
/* eslint-disable */

import type { ByteSource, PartialDeep } from "protoscript";
import * as protoscript from "protoscript";

//========================================//
//                 Types                  //
//========================================//

export type Role = "NONE" | "GUEST" | "MEMBER" | "ADMIN" | "SUPER_ADMIN";

export interface required {}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const Role = {
  NONE: "NONE",
  GUEST: "GUEST",
  MEMBER: "MEMBER",
  ADMIN: "ADMIN",
  SUPER_ADMIN: "SUPER_ADMIN",
  /**
   * @private
   */
  _fromInt: function (i: number): Role {
    switch (i) {
      case 0: {
        return "NONE";
      }
      case 10: {
        return "GUEST";
      }
      case 20: {
        return "MEMBER";
      }
      case 30: {
        return "ADMIN";
      }
      case 99: {
        return "SUPER_ADMIN";
      }
      // unknown values are preserved as numbers. this occurs when new enum values are introduced and the generated code is out of date.
      default: {
        return i as unknown as Role;
      }
    }
  },
  /**
   * @private
   */
  _toInt: function (i: Role): number {
    switch (i) {
      case "NONE": {
        return 0;
      }
      case "GUEST": {
        return 10;
      }
      case "MEMBER": {
        return 20;
      }
      case "ADMIN": {
        return 30;
      }
      case "SUPER_ADMIN": {
        return 99;
      }
      // unknown values are preserved as numbers. this occurs when new enum values are introduced and the generated code is out of date.
      default: {
        return i as unknown as number;
      }
    }
  },
} as const;

export const required = {
  /**
   * Serializes required to protobuf.
   */
  encode: function (_msg?: PartialDeep<required>): Uint8Array {
    return new Uint8Array();
  },

  /**
   * Deserializes required from protobuf.
   */
  decode: function (_bytes?: ByteSource): required {
    return {};
  },

  /**
   * Initializes required with all fields set to their default value.
   */
  initialize: function (msg?: Partial<required>): required {
    return {
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    _msg: PartialDeep<required>,
    writer: protoscript.BinaryWriter,
  ): protoscript.BinaryWriter {
    return writer;
  },

  /**
   * @private
   */
  _readMessage: function (
    _msg: required,
    _reader: protoscript.BinaryReader,
  ): required {
    return _msg;
  },
};

//========================================//
//          JSON Encode / Decode          //
//========================================//

export const RoleJSON = {
  NONE: "NONE",
  GUEST: "GUEST",
  MEMBER: "MEMBER",
  ADMIN: "ADMIN",
  SUPER_ADMIN: "SUPER_ADMIN",
  /**
   * @private
   */
  _fromInt: function (i: number): Role {
    switch (i) {
      case 0: {
        return "NONE";
      }
      case 10: {
        return "GUEST";
      }
      case 20: {
        return "MEMBER";
      }
      case 30: {
        return "ADMIN";
      }
      case 99: {
        return "SUPER_ADMIN";
      }
      // unknown values are preserved as numbers. this occurs when new enum values are introduced and the generated code is out of date.
      default: {
        return i as unknown as Role;
      }
    }
  },
  /**
   * @private
   */
  _toInt: function (i: Role): number {
    switch (i) {
      case "NONE": {
        return 0;
      }
      case "GUEST": {
        return 10;
      }
      case "MEMBER": {
        return 20;
      }
      case "ADMIN": {
        return 30;
      }
      case "SUPER_ADMIN": {
        return 99;
      }
      // unknown values are preserved as numbers. this occurs when new enum values are introduced and the generated code is out of date.
      default: {
        return i as unknown as number;
      }
    }
  },
} as const;

export const requiredJSON = {
  /**
   * Serializes required to JSON.
   */
  encode: function (_msg?: PartialDeep<required>): string {
    return "{}";
  },

  /**
   * Deserializes required from JSON.
   */
  decode: function (_json?: string): required {
    return {};
  },

  /**
   * Initializes required with all fields set to their default value.
   */
  initialize: function (msg?: Partial<required>): required {
    return {
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    _msg: PartialDeep<required>,
  ): Record<string, unknown> {
    return {};
  },

  /**
   * @private
   */
  _readMessage: function (msg: required, _json: any): required {
    return msg;
  },
};
